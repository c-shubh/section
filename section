#!/usr/bin/env python

import argparse
from enum import Enum
from math import ceil, floor
from typing import cast

import pyperclip


class langs(Enum):
    c = "c"
    java = "java"
    js = "js"
    jsx = "jsx"
    py = "py"
    rb = "rb"
    sh = "sh"


def parse():
    parser = argparse.ArgumentParser(
        description="A small utility to generate heading comment.",
    )

    parser.add_argument(
        "-i", "--indent", default=2, type=int, help="(default: %(default)s)"
    )
    parser.add_argument(
        "-w", "--width", default=80, type=int, help="(default: %(default)s)"
    )
    parser.add_argument(
        "-t",
        "--lang",
        default="c",
        type=str,
        choices=langs.__members__.keys(),
        help="(default: %(default)s)",
    )
    parser.add_argument("text", type=str)
    return parser.parse_args()


def commentType(lang: str) -> list[str]:
    match lang:
        case langs.c | langs.js | langs.java:
            return ["/* ", " */"]
        case langs.jsx:
            return ["{/* ", " */}"]
        case langs.py | langs.sh | langs.rb:
            return ["# ", ""]
    return ["", ""]


def copyOutput(args):
    text = " " + args.text.strip() + " "
    indentLen = args.indent
    leftComment, rightComment = commentType(cast(str, args.lang))
    totalDashesLen = (
        args.width - indentLen - len(leftComment) - len(text) - len(rightComment)
    )
    leftDashes = "-" * floor(totalDashesLen / 2)
    rightDashes = "-" * ceil(totalDashesLen / 2)

    output = leftComment + leftDashes + text + rightDashes + rightComment
    pyperclip.copy(output)


args = parse()
copyOutput(args)
